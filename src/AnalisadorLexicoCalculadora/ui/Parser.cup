package AnalisadorLexicoCalculadora.ui;

import java_cup.runtime.*;
import java.util.*;
import java.io.*;


parser code {:

    public void report_error(String message, Object info)  {
        System.out.println("Warning - " + message);
    }

    public void report_fatal_error(String message, Object info)  {
        System.out.println("Error - " + message);
        System.exit(-1);
    }

:};


// terminal PROGRAM, BEGIN, END, VARIABLE, COLON, INTEGER_TYPE, STRING_TYPE, CALL_FUNCTION;
// terminal RIGHT_PARAMETER, LEFT_PARAMETER, INTEGER, STRING, SEMICOLON, FUNCTION;
// terminal FUNCTION_PARAMS, LEFT_BRACKETS, RIGHT_BRACKETS, TT, FF, IF, ASSIGNMENT;
// terminal SYMBOL_ASSIGNMENT;

// non terminal program, statements, statement, statement_function;
// non terminal decl_variable, decl_call_function, decl_call_params, decl_params, decl_function, decl_if;
// non terminal decl_boolean,decl_assignments, decl_assignment;
// non terminal params_type, data_types;

terminal PALAVRA_RESERVADA_BEGIN, PALAVRA_RESERVADA_END, PALAVRA_RESERVADA_IF, PALAVRA_RESERVADA_THEN;
terminal PALAVRA_RESERVADA_ELSE, PALAVRA_RESERVADA_DO, PALAVRA_RESERVADA_WHILE, PALAVRA_RESERVADA_VAR;
terminal PALAVRA_RESERVADA_PROCEDURE, PALAVRA_RESERVADA_PROGRAM, SIMBOLOS_ESPECIAIS_MAIOR_OU_IGUAL;
terminal SIMBOLOS_ESPECIAIS_MAIOR_QUE, SIMBOLOS_ESPECIAIS_DIFERENTE, SIMBOLOS_ESPECIAIS_MENOR_OU_IGUAL;
terminal SIMBOLOS_ESPECIAIS_MENOR_QUE, SIMBOLOS_ESPECIAIS_ATRIBUICAO, SIMBOLOS_ESPECIAIS_IGUAL;
terminal SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA, SIMBOLOS_ESPECIAIS_VIRGULA, SIMBOLOS_ESPECIAIS_DOIS_PONTOS;
terminal OPERADOR_LOGICO_AND, OPERADOR_LOGICO_OR, OPERADOR_LOGICO_NOT, OPERADOR_MATEMATICO_SOMA;
terminal OPERADOR_MATEMATICO_SUBTRACAO, OPERADOR_MATEMATICO_MULTIPLICACAO, OPERADOR_MATEMATICO_DIVISAO;
terminal NUMERO_INTEIRO, TIPO_VARIAVEL_INT, TIPO_VARIAVEL_BOOLEAN, ABRE_PARENTESES, FECHA_PARENTESES;
terminal IDENTIFICADOR, FIM;

non terminal program, bloco, parte_de_declaracoes_de_variaveis, declaracao_de_variavel;
non terminal tipo, lista_de_identificadores, parte_de_declaracoes_de_subrotinas;
non terminal declaracao_de_procedimento, parametros_formais, secao_de_parametros_formais;
non terminal comando, comando_composto, comandos, atribuicao, chamada_de_procedimento;
non terminal comando_repetitivo_1, expressao, expressao_simples, repeticao_termo;
non terminal termo, repeticao_fator, fator, lista_de_expressoes;
non terminal comando_condicional_casado, casado, nao_casado;

start with program;

//DECLARAÇÕES

program ::= PALAVRA_RESERVADA_PROGRAM IDENTIFICADOR SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA bloco FIM;

bloco ::= parte_de_declaracoes_de_variaveis parte_de_declaracoes_de_subrotinas comando_composto | parte_de_declaracoes_de_variaveis comando_composto | parte_de_declaracoes_de_subrotinas comando_composto | comando_composto;

parte_de_declaracoes_de_variaveis ::= parte_de_declaracoes_de_variaveis SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA parte_de_declaracoes_de_variaveis | declaracao_de_variavel SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA;

declaracao_de_variavel ::= tipo lista_de_identificadores;

tipo ::= TIPO_VARIAVEL_INT | TIPO_VARIAVEL_BOOLEAN;

lista_de_identificadores ::= lista_de_identificadores SIMBOLOS_ESPECIAIS_VIRGULA IDENTIFICADOR | IDENTIFICADOR;

parte_de_declaracoes_de_subrotinas ::= parte_de_declaracoes_de_subrotinas declaracao_de_procedimento | declaracao_de_procedimento;

declaracao_de_procedimento ::= PALAVRA_RESERVADA_PROCEDURE IDENTIFICADOR ABRE_PARENTESES parametros_formais FECHA_PARENTESES SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA bloco;

parametros_formais ::= ABRE_PARENTESES secao_de_parametros_formais FECHA_PARENTESES;

secao_de_parametros_formais ::= secao_de_parametros_formais SIMBOLOS_ESPECIAIS_PONTO_E_VIRGULA  secao_de_parametros_formais |  PALAVRA_RESERVADA_VAR lista_de_identificadores SIMBOLOS_ESPECIAIS_DOIS_PONTOS IDENTIFICADOR | lista_de_identificadores SIMBOLOS_ESPECIAIS_DOIS_PONTOS IDENTIFICADOR;

//COMANDOS

comando_composto ::= PALAVRA_RESERVADA_BEGIN comandos PALAVRA_RESERVADA_END;

comandos ::= comandos comando | comando;  

//comando ::= atribuicao | chamada_de_procedimento | comando_composto | comando_condicional_1 | comando_condicional_2 | comando_repetitivo_1;
//comando ::= atribuicao | chamada_de_procedimento | comando_condicional_1 | comando_repetitivo_1;

comando ::= casado | nao_casado;

casado ::= atribuicao | chamada_de_procedimento | comando_condicional_casado | comando_repetitivo_1;

comando_condicional_casado ::= PALAVRA_RESERVADA_IF expressao PALAVRA_RESERVADA_THEN casado PALAVRA_RESERVADA_ELSE casado; 

nao_casado ::= PALAVRA_RESERVADA_IF expressao PALAVRA_RESERVADA_THEN comando | PALAVRA_RESERVADA_IF expressao PALAVRA_RESERVADA_THEN casado PALAVRA_RESERVADA_ELSE nao_casado;

//comando_condicional_1 ::= PALAVRA_RESERVADA_IF expressao comando | PALAVRA_RESERVADA_IF expressao comando_composto;

//comando_condicional_2 ::= PALAVRA_RESERVADA_IF expressao PALAVRA_RESERVADA_THEN comando PALAVRA_RESERVADA_ELSE comando ;

atribuicao ::= IDENTIFICADOR SIMBOLOS_ESPECIAIS_ATRIBUICAO expressao;

chamada_de_procedimento ::= IDENTIFICADOR lista_de_expressoes;

comando_repetitivo_1 ::= PALAVRA_RESERVADA_WHILE expressao PALAVRA_RESERVADA_DO comando;

//EXPRESSÕES

expressao ::= expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_IGUAL expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_MAIOR_OU_IGUAL expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_MAIOR_QUE expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_DIFERENTE expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_MENOR_OU_IGUAL expressao_simples | expressao_simples SIMBOLOS_ESPECIAIS_MENOR_QUE expressao_simples;

expressao_simples ::= termo repeticao_termo | OPERADOR_MATEMATICO_SOMA termo | OPERADOR_MATEMATICO_SUBTRACAO termo;

repeticao_termo ::= repeticao_termo OPERADOR_MATEMATICO_SOMA termo | repeticao_termo OPERADOR_MATEMATICO_SUBTRACAO termo | repeticao_termo OPERADOR_LOGICO_OR termo | ;

termo ::= fator repeticao_fator;

//repeticao_fator ::= repeticao_fator OPERADOR_MATEMATICO_MULTIPLICACAO fator | repeticao_fator OPERADOR_MATEMATICO_DIVISAO fator | repeticao_fator OPERADOR_LOGICO_AND fator | OPERADOR_MATEMATICO_MULTIPLICACAO fator | OPERADOR_MATEMATICO_DIVISAO fator | OPERADOR_LOGICO_AND fator | ;
repeticao_fator ::= repeticao_fator OPERADOR_MATEMATICO_MULTIPLICACAO fator | repeticao_fator OPERADOR_MATEMATICO_DIVISAO fator | repeticao_fator OPERADOR_LOGICO_AND fator | ;

fator ::= IDENTIFICADOR | NUMERO_INTEIRO | ABRE_PARENTESES expressao FECHA_PARENTESES | OPERADOR_LOGICO_NOT fator;

// variavel ::= IDENTIFICADOR;

lista_de_expressoes ::= expressao |  lista_de_expressoes SIMBOLOS_ESPECIAIS_VIRGULA expressao;