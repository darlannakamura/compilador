/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AnalisadorLexicoCalculadora.ui;

import AnalisadorLexicoCalculadora.classes.HtmlToText;
import AnalisadorLexicoCalculadora.classes.ItemErro;
import AnalisadorLexicoCalculadora.classes.ItemLexico;
import AnalisadorLexicoCalculadora.classes.ItemSintatico;
import AnalisadorLexicoCalculadora.utils.ErrosSemanticos;
import AnalisadorLexicoCalculadora.utils.TratamentoErros;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.DefaultSymbolFactory;
import java_cup.runtime.Symbol;
import java_cup.runtime.SymbolFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author darla
 */
public class Interface extends javax.swing.JFrame {

    public DefaultTableModel tableModelTokens, tableModelErros, 
            tableModelErrosSintaticos, tableModelErrosSemanticos;

    /**
     * Creates new form Interface
     */
    public Interface() {
        inicializaTabelas();
        initComponents();
    }

    public void inicializaTabelas() {
        Object[][] conteudoTokens = {{}};
        Object[] colunasTokens = {"Lexema", "Token", "Linha", "Coluna Inicial", "Coluna Final"};
        tableModelTokens = new DefaultTableModel(conteudoTokens, colunasTokens);

        Object[][] conteudoErros = {{}};
        Object[] colunasErros = {"Erro", "Lexema", "Linha"};
        tableModelErros = new DefaultTableModel(conteudoErros, colunasErros);
        
        Object[][] conteudoErrosSintaticos = {{}};
        Object[] colunasErrosSintaticos = {"Erro", "Linha"};
        tableModelErrosSintaticos = new DefaultTableModel(conteudoErrosSintaticos, colunasErrosSintaticos);
        
        Object[][] conteudoErrosSemanticos = {{}};
        Object[] colunasErrosSemanticos = {"Erro"};
        tableModelErrosSemanticos = new DefaultTableModel(conteudoErrosSemanticos, colunasErrosSemanticos);
    }

    public void zeraConteudoTabelas() {
        while (tableModelTokens.getRowCount() > 0) {
            tableModelTokens.removeRow(0);
        }
        while (tableModelErros.getRowCount() > 0) {
            tableModelErros.removeRow(0);
        }
        while (tableModelErrosSintaticos.getRowCount() > 0) {
            tableModelErrosSintaticos.removeRow(0);
        }
        while (tableModelErrosSemanticos.getRowCount() > 0) {
            tableModelErrosSemanticos.removeRow(0);
        }
    }

    public String limpaHtml(String stringComHtml) {
        HtmlToText htmlToText = new HtmlToText();

        try {
            htmlToText.parse(stringComHtml);
            System.out.println(htmlToText.getText());
            return htmlToText.getText();
            // Saida do sistema: "Correções Monitor 1.0.0.43:"
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTokensReconhecidos = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableErrosLexicos = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableErrosSintaticos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableErrosSemanticos = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemAbrirArquivo = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Analisador Léxico da Calculadora");

        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jScrollPane2.setViewportView(jTextPane1);
        // Retirado de https://tips4java.wordpress.com/2009/05/23/text-component-line-number/

        TextLineNumber tln = new TextLineNumber(jTextPane1);

        jScrollPane2.setRowHeaderView(tln);

        jTabbedPane1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jTabbedPane1CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jTableTokensReconhecidos.setModel(tableModelTokens);
        jScrollPane3.setViewportView(jTableTokensReconhecidos);

        jTabbedPane1.addTab("Tokens Reconhecidos", jScrollPane3);

        jTableErrosLexicos.setModel(tableModelErros);
        jScrollPane5.setViewportView(jTableErrosLexicos);

        jTabbedPane1.addTab("Erros Léxicos", jScrollPane5);

        jTableErrosSintaticos.setModel(tableModelErrosSintaticos);
        jScrollPane1.setViewportView(jTableErrosSintaticos);

        jTabbedPane1.addTab("Erros Sintáticos", jScrollPane1);

        jTableErrosSemanticos.setModel(tableModelErrosSemanticos);
        jScrollPane4.setViewportView(jTableErrosSemanticos);

        jTabbedPane1.addTab("Erros Semânticos", jScrollPane4);

        jMenu1.setText("Arquivo");

        jMenuItemAbrirArquivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAbrirArquivo.setText("Abrir Arquivo");
        jMenuItemAbrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirArquivoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAbrirArquivo);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Salvar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Salvar Como");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Fechar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Operações");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Analisar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ajuda");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Como funciona o Analisador Léxico");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        ErrosSemanticos.limparErros();
        analiseLexica();
        analiseSintatica(); // Também roda a semântica
        
        
        //String codigo = lexical.getCodigoFonteColorido();
     }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Ter certeza que deseja sair?");
        if (resposta == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        String string = "Analisador Léxico - Calculadora\n"
                + "\n"
                + "Dupla: Darlan Nakamura e Rafael Bezerra\n"
                + "\n"
                + "Questões a considerar:\n"
                + "\n"
                + "1. Que símbolo usar como separador de casa decimais? R: Estamos utilizando o (ponto) e a vírgula.\n"
                + "\n"
                + "2. A calculadora usa representação monetária? R: Não.\n"
                + "\n"
                + "3. A calculadora deve ter 1 dígito antes e depois do separador para números reais.\n"
                + "\n"
                + "4. A calculadora aceita espaços entre os operandos e operadores? R: Sim.";

        JOptionPane.showMessageDialog(null, string);    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItemAbrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirArquivoActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Selecione um código fonte");
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();
            try {
                BufferedReader reader = new BufferedReader(new FileReader(arquivo));
                String line = reader.readLine();
                String html = "";
                while (line != null) {
                    //jTextArea1.append(line + "\n");
                    html += line + "\n";
                    line = reader.readLine();
                }
                jTextPane1.setText(line);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItemAbrirArquivoActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTabbedPane1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTabbedPane1CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1CaretPositionChanged

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public void analiseSintatica(){
        try {
            String expressao = jTextPane1.getText();
            //Parser parser = new Parser(new LexicalAnalyzer(new StringReader(expressao)));
            SymbolFactory symbolFactory = new DefaultSymbolFactory();
            LexicalAnalyzer lex = new LexicalAnalyzer((new StringReader((expressao))));
          
            Parser parser = new Parser(lex, symbolFactory);
            parser.parse();
            
            ArrayList<ItemSintatico> errosSintaticos = parser.getItensSintaticos();
            
            jTabbedPane1.setTitleAt(2, "Erros Sintáticos (" + String.valueOf(errosSintaticos.size()) + ")");
            for(ItemSintatico erro: errosSintaticos){
                Object[] array = {erro.getMensagem(), erro.getLinha()};
                tableModelErrosSintaticos.addRow(array);
            }
            
            // Erros Semânticos
            ArrayList<String> errosSemanticos = ErrosSemanticos.getErrosSemanticos();
            jTabbedPane1.setTitleAt(3, "Erros Semânticos (" + String.valueOf(errosSemanticos.size()) + ")");
            for(String erro: errosSemanticos){
                Object[] array = {erro};
                tableModelErrosSemanticos.addRow(array);
            }
            
            //System.out.println("Compilacao concluida com sucesso...");
            JOptionPane.showMessageDialog(null, "Compilacao concluida com sucesso!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro durante a compilação. O parser não conseguiu recuperar " +
                    "algum erro sintático!");

        }
        
    }
    
    
    public void analiseLexica() {
        zeraConteudoTabelas();
        String expressao = jTextPane1.getText();
        LexicalAnalyzer lexical = new LexicalAnalyzer(new StringReader(expressao));
        ArrayList<ItemLexico> itens = getItensLexicos(lexical);

        // Impressão dos tokens
        for (int i = 0; i < itens.size(); i++) {
            //Object[] array = {lexemas.get(i), descricoes.get(i)};
            if (!itens.get(i).getToken().equals("DESCONHECIDO")) {
                Object[] array = {itens.get(i).getLexema(), itens.get(i).getToken(), itens.get(i).getLinha(), itens.get(i).getColuna_inicio(), itens.get(i).getColuna_fim()};
                tableModelTokens.addRow(array);
            }
        }

        // Tratamento de Erros
        ArrayList<ItemErro> erros = TratamentoErros.tratamentoLexico(itens);
        // Impressão dos tokens
        jTabbedPane1.setTitleAt(1, "Erros Léxicos (" + String.valueOf(erros.size()) + ")");
        for (ItemErro erro : erros) {
            Object[] array = {erro.getMensagem(), erro.getLexema(), erro.getLinha()};
            tableModelErros.addRow(array);
        }
    }

    public String getTerminal(int sym) {
        for (int i = 0; i < Sym.terminalNames.length; i++) {
            if (sym == i) {
                return Sym.terminalNames[i];
            }
        }
        return "UNKNOWN";
    }

    public ArrayList<ItemLexico> getItensLexicos(LexicalAnalyzer lexical) {
        try {
            ArrayList<ItemLexico> itens = new ArrayList<>();

            Symbol s = lexical.next_token();
            String terminal = "";
            while (s.sym != 0) { // 0 é EOF
                ItemLexico aux = new ItemLexico();
                terminal = getTerminal(s.sym);
                aux.setToken(terminal);
                aux.setLexema(lexical.yytext());
                aux.setLinha(lexical.getYyline() + 1);
                aux.setColuna_inicio(lexical.getYycolumn() + 1);
                aux.setColuna_fim(lexical.getYycolumn() + lexical.yylength() + 1);
                itens.add(aux);
                s = lexical.next_token();
            }
            return itens;
            /**
             * @param args the command line arguments
             */
        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItemAbrirArquivo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableErrosLexicos;
    private javax.swing.JTable jTableErrosSemanticos;
    private javax.swing.JTable jTableErrosSintaticos;
    private javax.swing.JTable jTableTokensReconhecidos;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
